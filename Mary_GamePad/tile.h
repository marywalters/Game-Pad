#include "sprites_MASK.h"           
#include "sprites_PIX.h"

#define tileW 16         // 16 Tiles Across
#define tileH 12         // 12 Tiles Down
#define tileSize 20      // Tile Width (in pixels)
#define numLevels 6      // Number of Levels

int levels[numLevels][tileW * tileH]{
  // Level 0 - Front
  {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x1C, 0x1D, 0x00, 0x00, 0x1E, 0x1F, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x04, 0x04, 0x0C, 
  },
  // Level 1
  {
    0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x04, 0x04, 0x0C, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x17, 0x14, 0x03, 0x03, 0x17, 0x14, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x16, 0x15, 0x03, 0x03, 0x16, 0x15, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x17, 0x14, 0x03, 0x03, 0x17, 0x14, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x16, 0x15, 0x03, 0x03, 0x16, 0x15, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x21, 0x06, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x0E, 0x08, 0x08, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x08, 0x08, 0x0D, 
  },
  // Etc..
};

void thisLevel(){
  tft.drawBitmap(int16_t x, int16_t y, uint8_t *bitmap, int16_t w, int16_t h, uint16_t color);
}

void drawLevel(int thisLevel){
    tft.drawRGBBitmap(0,0, );
}
